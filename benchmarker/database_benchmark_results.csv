query,original_query,database_type,execution_time_ms,cpu_usage_percent,memory_usage_mb,memory_usage_percent,disk_read_mb,disk_write_mb,network_in_mb,network_out_mb,result_rows,result_size_mb,failed
/* SELECT Queries */ /* Basic Select with Limit */ SELECT * FROM data LIMIT 100,"-- SELECT Queries
-- Basic Select with Limit
SELECT * FROM data LIMIT 100",MySQLHandler,12.682199478149414,0.4364363863707409,671.08203125,16.383838653564453,0.0,0.0,0.0015840530395507812,0.006682395935058594,100,0.012714385986328125,False
/* Basic Count */ SELECT COUNT(*) FROM data,"-- Basic Count
SELECT COUNT(*) FROM data",MySQLHandler,6.0405731201171875,0.2993613024420789,671.1484375,16.385459899902344,0.0,0.0,0.0016584396362304688,0.0016908645629882812,1,0.000133514404296875,False
/* Select with Simple Date Range Filter */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01',"-- Select with Simple Date Range Filter 
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",MySQLHandler,86.73858642578125,0.2470492317340859,671.36328125,16.390705108642578,0.0,0.0,0.003696441650390625,0.4384126663208008,8760,1.1028785705566406,False
/* Select with Multiple Filters (Date Range and Category) */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND P > 0,"-- Select with Multiple Filters (Date Range and Category)
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND P > 0",MySQLHandler,62.97111511230469,0.24493081761006288,671.39453125,16.391468048095703,0.0,0.0,0.0027780532836914062,0.2315044403076172,4097,0.5158767700195312,False
"/* Select with ORDER BY and Limit */ SELECT * FROM data ORDER BY CASE WHEN P IS NULL THEN 1 ELSE 0 END DESC, P DESC LIMIT 50","-- Select with ORDER BY and Limit
SELECT * FROM data ORDER BY P DESC LIMIT 50",MySQLHandler,52.043914794921875,0.2818928235662802,672.171875,16.410446166992188,0.0,0.0,0.0015878677368164062,0.005206108093261719,50,0.006420135498046875,False
"/* Get top 50 rows by power output */ /* AGGREGATE Queries */ /* Basic Aggregates */ SELECT AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data","-- Get top 50 rows by power output

-- AGGREGATE Queries 
-- Basic Aggregates
SELECT AVG(P) as avg_power_output, MAX(P) as max_power_output, MIN(P) as min_power_output FROM data",MySQLHandler,32.28354454040527,0.2294169278996865,672.33203125,16.414356231689453,0.0,0.0,0.001789093017578125,0.0017986297607421875,1,0.000148773193359375,False
"/* Aggregates with Date Range Filter (Corrected: use AND, standard date format) */ SELECT AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'","-- Aggregates with Date Range Filter (Corrected: use AND, standard date format)
SELECT AVG(P) as avg_power_output, MAX(P) as max_power_output, MIN(P) as min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",MySQLHandler,37.11080551147461,0.26286790084719175,672.5390625,16.419410705566406,0.0,0.0,0.00167083740234375,0.0017986297607421875,1,0.000148773193359375,False
"/* Aggregates Grouped by Year with Ordering */ SELECT EXTRACT(YEAR FROM time) AS year, AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' GROUP BY EXTRACT(YEAR FROM time) ORDER BY CASE WHEN EXTRACT(YEAR FROM time) IS NULL THEN 1 ELSE 0 END, EXTRACT(YEAR FROM time)","-- Aggregates Grouped by Year with Ordering
SELECT
    EXTRACT(YEAR FROM time) as year,
    AVG(P) as avg_power_output,
    MAX(P) as max_power_output,
    MIN(P) as min_power_output
FROM data
WHERE time >= '2023-01-01' AND time < '2024-01-01'
GROUP BY EXTRACT(YEAR FROM time)
ORDER BY EXTRACT(YEAR FROM time)",MySQLHandler,46.970367431640625,0.2550782717595491,672.90234375,16.428279876708984,0.0,0.0,0.0018091201782226562,0.0020246505737304688,1,0.000156402587890625,False
"/* JOIN Queries */ /* Simple Self-Join to Calculate Power Change */ SELECT t1.time, t1.P AS power_output, t2.P AS previous_power, t1.P - t2.P AS power_change FROM data AS t1 JOIN data AS t2 ON t1.time = t2.time","-- JOIN Queries
-- Simple Self-Join to Calculate Power Change
SELECT
    t1.time,     
    t1.P as power_output,  
    t2.P as previous_power, 
    t1.P - t2.P as power_change
FROM data t1
JOIN data t2 ON t1.time = t2.time",MySQLHandler,511.07048988342285,0.2666499843603378,681.84375,16.646575927734375,0.0,0.0,0.021175384521484375,5.54798698425293,166536,14.61166763305664,False
"/* The INTERVAL creates an error in mysql */ /* WINDOW FUNCTION Queries */ /* Power output changes */ SELECT d.time, P AS power_output, LAG(P) OVER (ORDER BY CASE WHEN time IS NULL THEN 1 ELSE 0 END, time) AS previous_P, P - LAG(P) OVER (ORDER BY CASE WHEN time IS NULL THEN 1 ELSE 0 END, time) AS power_change FROM data AS d","-- The INTERVAL creates an error in mysql

-- WINDOW FUNCTION Queries
-- Power output changes
SELECT
    d.time,
    P as power_output,
    LAG(P) OVER (ORDER BY time) as previous_P,
    P - LAG(P) OVER (ORDER BY time) as power_change
FROM data as d",MySQLHandler,1442.7680969238281,0.3885,747.5,18.24951171875,0.0,0.0,0.02812480926513672,6.4875640869140625,166536,14.61166763305664,False
"/* Running total */ SELECT time, P AS power_output, SUM(P) OVER (ORDER BY CASE WHEN time IS NULL THEN 1 ELSE 0 END, time) AS running_total FROM data ORDER BY CASE WHEN time IS NULL THEN 1 ELSE 0 END, time","-- Running total
SELECT
    time,
    P as power_output,
    SUM(P) OVER (ORDER BY time) as running_total
FROM data
ORDER BY time",MySQLHandler,889.2524242401123,0.29309068089112017,774.48828125,18.908405303955078,0.0,0.0,0.022042274475097656,7.435646057128906,166536,13.34109878540039,False
/* SELECT Queries */ /* Basic Select with Limit */ SELECT * FROM data LIMIT 100,"-- SELECT Queries
-- Basic Select with Limit
SELECT * FROM data LIMIT 100",PostgresHandler,5.995512008666992,0.017994376757263356,197.52734375,9.644889831542969,0.0,0.0,0.002758026123046875,0.01007843017578125,100,0.012714385986328125,False
/* Basic Count */ SELECT COUNT(*) FROM data,"-- Basic Count
SELECT COUNT(*) FROM data",PostgresHandler,13.104915618896484,0.026298619824341278,199.2421875,9.728622436523438,0.0,0.0,0.0019855499267578125,0.0023717880249023438,1,0.000133514404296875,False
/* Select with Simple Date Range Filter */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01',"-- Select with Simple Date Range Filter 
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",PostgresHandler,28.12504768371582,0.01244277202884917,197.578125,9.647369384765625,0.0,0.0,0.007822036743164062,0.6929836273193359,8760,1.1028785705566406,False
/* Select with Multiple Filters (Date Range and Category) */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND P > 0,"-- Select with Multiple Filters (Date Range and Category)
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND P > 0",PostgresHandler,12.528657913208008,0.01907151819322459,199.34375,9.73358154296875,0.0,0.0,0.0019845962524414062,0.0024738311767578125,0,0.0,True
/* Select with ORDER BY and Limit */ SELECT * FROM data ORDER BY P DESC LIMIT 50,"-- Select with ORDER BY and Limit
SELECT * FROM data ORDER BY P DESC LIMIT 50",PostgresHandler,6.116390228271484,0.02951992469406966,201.26171875,9.827232360839844,0.0,0.0,0.0019273757934570312,0.0024728775024414062,0,0.0,True
"/* Get top 50 rows by power output */ /* AGGREGATE Queries */ /* Basic Aggregates */ SELECT AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data","-- Get top 50 rows by power output

-- AGGREGATE Queries 
-- Basic Aggregates
SELECT AVG(P) as avg_power_output, MAX(P) as max_power_output, MIN(P) as min_power_output FROM data",PostgresHandler,5.170583724975586,0.018735128365685663,202.68359375,9.896659851074219,0.0,0.0,0.0020227432250976562,0.0024728775024414062,0,0.0,True
"/* Aggregates with Date Range Filter (Corrected: use AND, standard date format) */ SELECT AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'","-- Aggregates with Date Range Filter (Corrected: use AND, standard date format)
SELECT AVG(P) as avg_power_output, MAX(P) as max_power_output, MIN(P) as min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",PostgresHandler,5.5789947509765625,0.37775266792215945,205.17578125,10.018348693847656,0.0,0.0,0.0020732879638671875,0.0024728775024414062,0,0.0,True
"/* Aggregates Grouped by Year with Ordering */ SELECT EXTRACT(YEAR FROM time) AS year, AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' GROUP BY EXTRACT(YEAR FROM time) ORDER BY EXTRACT(YEAR FROM time)","-- Aggregates Grouped by Year with Ordering
SELECT
    EXTRACT(YEAR FROM time) as year,
    AVG(P) as avg_power_output,
    MAX(P) as max_power_output,
    MIN(P) as min_power_output
FROM data
WHERE time >= '2023-01-01' AND time < '2024-01-01'
GROUP BY EXTRACT(YEAR FROM time)
ORDER BY EXTRACT(YEAR FROM time)",PostgresHandler,5.251646041870117,0.019830985915492958,207.13671875,10.114097595214844,0.0,0.0,0.0022115707397460938,0.002655029296875,0,0.0,True
"/* JOIN Queries */ /* Simple Self-Join to Calculate Power Change */ SELECT t1.time, t1.P AS power_output, t2.P AS previous_power, t1.P - t2.P AS power_change FROM data AS t1 JOIN data AS t2 ON t1.time = t2.time","-- JOIN Queries
-- Simple Self-Join to Calculate Power Change
SELECT
    t1.time,     
    t1.P as power_output,  
    t2.P as previous_power, 
    t1.P - t2.P as power_change
FROM data t1
JOIN data t2 ON t1.time = t2.time",PostgresHandler,5.133390426635742,0.017688442211055276,208.578125,10.184478759765625,0.0,0.0,0.0020656585693359375,0.0024738311767578125,0,0.0,True
"/* The INTERVAL creates an error in mysql */ /* WINDOW FUNCTION Queries */ /* Power output changes */ SELECT d.time, P AS power_output, LAG(P) OVER (ORDER BY time) AS previous_P, P - LAG(P) OVER (ORDER BY time) AS power_change FROM data AS d","-- The INTERVAL creates an error in mysql

-- WINDOW FUNCTION Queries
-- Power output changes
SELECT
    d.time,
    P as power_output,
    LAG(P) OVER (ORDER BY time) as previous_P,
    P - LAG(P) OVER (ORDER BY time) as power_change
FROM data as d",PostgresHandler,5.132436752319336,0.017499999999999998,210.25390625,10.266304016113281,0.0,0.0,0.0020914077758789062,0.0024738311767578125,0,0.0,True
"/* Running total */ SELECT time, P AS power_output, SUM(P) OVER (ORDER BY time) AS running_total FROM data ORDER BY time","-- Running total
SELECT
    time,
    P as power_output,
    SUM(P) OVER (ORDER BY time) as running_total
FROM data
ORDER BY time",PostgresHandler,15.460968017578125,0.018279974890144383,211.92578125,10.347938537597656,0.0,0.0,0.0019769668579101562,0.0024728775024414062,0,0.0,True
/* SELECT Queries */ /* Basic Select with Limit */ SELECT * FROM data LIMIT 100,"-- SELECT Queries
-- Basic Select with Limit
SELECT * FROM data LIMIT 100",DuckDBHandler,12.217998504638672,0.0017047947351927298,123.77734375,12.087631225585938,0.0,0.0,0.00025844573974609375,0.0,100,0.012714385986328125,False
/* Basic Count */ SELECT COUNT(*) FROM data,"-- Basic Count
SELECT COUNT(*) FROM data",DuckDBHandler,2.3713111877441406,0.001702660406885759,123.77734375,12.087631225585938,0.0,0.0,6.67572021484375e-05,0.0,1,0.000133514404296875,False
/* Select with Simple Date Range Filter */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01',"-- Select with Simple Date Range Filter 
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",DuckDBHandler,18.033266067504883,0.0018050767784393608,123.77734375,12.087631225585938,0.0,0.0,0.00010204315185546875,0.0,8760,1.1028785705566406,False
/* Select with Multiple Filters (Date Range and Category) */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND P > 0,"-- Select with Multiple Filters (Date Range and Category)
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND P > 0",DuckDBHandler,12.398719787597656,0.007327478042659975,123.77734375,12.087631225585938,0.0,0.0,0.0,0.0,4097,0.5158767700195312,False
/* Select with ORDER BY and Limit */ SELECT * FROM data ORDER BY P DESC NULLS FIRST LIMIT 50,"-- Select with ORDER BY and Limit
SELECT * FROM data ORDER BY P DESC LIMIT 50",DuckDBHandler,13.167858123779297,0.0019059561128526644,123.77734375,12.087631225585938,0.0,0.0,0.00010204315185546875,0.0,50,0.006420135498046875,False
"/* Get top 50 rows by power output */ /* AGGREGATE Queries */ /* Basic Aggregates */ SELECT AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data","-- Get top 50 rows by power output

-- AGGREGATE Queries 
-- Basic Aggregates
SELECT AVG(P) as avg_power_output, MAX(P) as max_power_output, MIN(P) as min_power_output FROM data",DuckDBHandler,3.3597946166992188,0.0018033813400125235,123.77734375,12.087631225585938,0.0,0.0,6.67572021484375e-05,0.0,1,0.000148773193359375,False
"/* Aggregates with Date Range Filter (Corrected: use AND, standard date format) */ SELECT AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'","-- Aggregates with Date Range Filter (Corrected: use AND, standard date format)
SELECT AVG(P) as avg_power_output, MAX(P) as max_power_output, MIN(P) as min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",DuckDBHandler,3.3004283905029297,0.0018028169014084508,123.77734375,12.087631225585938,0.0,0.0,0.00010204315185546875,0.0,1,0.000148773193359375,False
"/* Aggregates Grouped by Year with Ordering */ SELECT EXTRACT(YEAR FROM time) AS year, AVG(P) AS avg_power_output, MAX(P) AS max_power_output, MIN(P) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' GROUP BY EXTRACT(YEAR FROM time) ORDER BY EXTRACT(YEAR FROM time)","-- Aggregates Grouped by Year with Ordering
SELECT
    EXTRACT(YEAR FROM time) as year,
    AVG(P) as avg_power_output,
    MAX(P) as max_power_output,
    MIN(P) as min_power_output
FROM data
WHERE time >= '2023-01-01' AND time < '2024-01-01'
GROUP BY EXTRACT(YEAR FROM time)
ORDER BY EXTRACT(YEAR FROM time)",DuckDBHandler,10.53309440612793,0.0016060225846925972,123.77734375,12.087631225585938,0.0,0.0,0.0,0.0,0,0.0,True
"/* JOIN Queries */ /* Simple Self-Join to Calculate Power Change */ SELECT t1.time, t1.P AS power_output, t2.P AS previous_power, t1.P - t2.P AS power_change FROM data AS t1 JOIN data AS t2 ON t1.time = t2.time","-- JOIN Queries
-- Simple Self-Join to Calculate Power Change
SELECT
    t1.time,     
    t1.P as power_output,  
    t2.P as previous_power, 
    t1.P - t2.P as power_change
FROM data t1
JOIN data t2 ON t1.time = t2.time",DuckDBHandler,163.12289237976074,0.001811320754716981,123.77734375,12.087631225585938,0.0,0.0,0.0,0.0,166536,14.61166763305664,False
"/* The INTERVAL creates an error in mysql */ /* WINDOW FUNCTION Queries */ /* Power output changes */ SELECT d.time, P AS power_output, LAG(P) OVER (ORDER BY time) AS previous_P, P - LAG(P) OVER (ORDER BY time) AS power_change FROM data AS d","-- The INTERVAL creates an error in mysql

-- WINDOW FUNCTION Queries
-- Power output changes
SELECT
    d.time,
    P as power_output,
    LAG(P) OVER (ORDER BY time) as previous_P,
    P - LAG(P) OVER (ORDER BY time) as power_change
FROM data as d",DuckDBHandler,218.58787536621094,0.001919797916008841,123.77734375,12.087631225585938,0.0,0.0,0.0,0.0,166536,14.61166763305664,False
"/* Running total */ SELECT time, P AS power_output, SUM(P) OVER (ORDER BY time) AS running_total FROM data ORDER BY time","-- Running total
SELECT
    time,
    P as power_output,
    SUM(P) OVER (ORDER BY time) as running_total
FROM data
ORDER BY time",DuckDBHandler,239.4402027130127,0.0016095567431625274,123.77734375,12.087631225585938,0.0,0.0,0.0,0.0,166536,13.34109878540039,False
