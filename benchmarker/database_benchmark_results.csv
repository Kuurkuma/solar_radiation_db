query,original_query,database_type,execution_time_ms,cpu_usage_percent,memory_usage_mb,memory_usage_percent,disk_read_mb,disk_write_mb,network_in_mb,network_out_mb,result_rows,result_size_mb,failed
/* SELECT Queries */ /* Basic Select with Limit */ SELECT * FROM data LIMIT 100,"-- SELECT Queries
-- Basic Select with Limit
SELECT * FROM data LIMIT 100",MySQLHandler,33.79511833190918,5.197810945273631,730.1015625,17.824745178222656,0.0,0.0,0.0015840530395507812,0.006703376770019531,100,0.006992340087890625,False
/* Basic Count */ SELECT COUNT(*) FROM data,"-- Basic Count
SELECT COUNT(*) FROM data",MySQLHandler,38.43832015991211,2.940545905707196,746.7265625,18.230628967285156,0.0,0.0,0.0014896392822265625,0.0016908645629882812,1,0.000133514404296875,False
/* Select with Simple Date Range Filter */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01',"-- Select with Simple Date Range Filter 
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",MySQLHandler,230.59606552124023,1.3625935162094764,753.8984375,18.405723571777344,0.0,0.0,0.0036334991455078125,0.4384336471557617,8760,0.6016273498535156,False
/* Select with Multiple Filters (Date Range and Category) */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND power_output > 0,"-- Select with Multiple Filters (Date Range and Category)
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND power_output > 0",MySQLHandler,160.9330177307129,1.0607960199004975,753.8046875,18.40343475341797,0.0,0.0,0.0027256011962890625,0.2314624786376953,4097,0.2814445495605469,False
"/* Select with ORDER BY and Limit */ SELECT * FROM data ORDER BY CASE WHEN power_output IS NULL THEN 1 ELSE 0 END DESC, power_output DESC LIMIT 50","-- Select with ORDER BY and Limit
SELECT * FROM data ORDER BY power_output DESC LIMIT 50",MySQLHandler,203.7029266357422,1.139650872817955,754.046875,18.409347534179688,0.0,0.0,0.001598358154296875,0.005227088928222656,50,0.003559112548828125,False
"/* Get top 50 rows by power output */ /* AGGREGATE Queries */ /* Basic Aggregates */ SELECT AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data","-- Get top 50 rows by power output

-- AGGREGATE Queries 
-- Basic Aggregates
SELECT AVG(power_output) as avg_power_output, MAX(power_output) as max_power_output, MIN(power_output) as min_power_output FROM data",MySQLHandler,121.13404273986816,1.095055900621118,754.48046875,18.419933319091797,0.0,0.0,0.001651763916015625,0.0019245147705078125,1,0.000148773193359375,False
"/* Aggregates with Date Range Filter (Corrected: use AND, standard date format) */ SELECT AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'","-- Aggregates with Date Range Filter (Corrected: use AND, standard date format)
SELECT AVG(power_output) as avg_power_output, MAX(power_output) as max_power_output, MIN(power_output) as min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",MySQLHandler,107.3451042175293,1.316318407960199,754.40234375,18.418025970458984,0.0,0.0,0.0017023086547851562,0.0019245147705078125,1,0.000148773193359375,False
"/* Aggregates Grouped by Year with Ordering */ SELECT EXTRACT(YEAR FROM time) AS year, AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' GROUP BY EXTRACT(YEAR FROM time) ORDER BY CASE WHEN EXTRACT(YEAR FROM time) IS NULL THEN 1 ELSE 0 END, EXTRACT(YEAR FROM time)","-- Aggregates Grouped by Year with Ordering
SELECT
    EXTRACT(YEAR FROM time) as year,
    AVG(power_output) as avg_power_output,
    MAX(power_output) as max_power_output,
    MIN(power_output) as min_power_output
FROM data
WHERE time >= '2023-01-01' AND time < '2024-01-01'
GROUP BY EXTRACT(YEAR FROM time)
ORDER BY EXTRACT(YEAR FROM time)",MySQLHandler,114.55011367797852,1.1659850374064837,755.31640625,18.44034194946289,0.0,0.0,0.00177764892578125,0.0019617080688476562,1,0.000156402587890625,False
"/* JOIN Queries */ /* Simple Self-Join to Calculate Power Change */ SELECT t1.time, t1.power_output AS power_output, t2.power_output AS previous_power, t1.power_output - t2.power_output AS power_change FROM data AS t1 JOIN data AS t2 ON t1.time = t2.time","-- JOIN Queries
-- Simple Self-Join to Calculate Power Change
SELECT
    t1.time,     
    t1.power_output as power_output,  
    t2.power_output as previous_power, 
    t1.power_output - t2.power_output as power_change
FROM data t1
JOIN data t2 ON t1.time = t2.time",MySQLHandler,1077.2590637207031,1.0831460674157305,763.8671875,18.64910125732422,0.0,0.0,0.025056838989257812,5.54932975769043,166536,5.082401275634766,False
"/* The INTERVAL creates an error in mysql */ /* WINDOW FUNCTION Queries */ /* Power output changes */ SELECT d.time, power_output AS power_output, LAG(power_output) OVER (ORDER BY CASE WHEN time IS NULL THEN 1 ELSE 0 END, time) AS previous_power_output, power_output - LAG(power_output) OVER (ORDER BY CASE WHEN time IS NULL THEN 1 ELSE 0 END, time) AS power_change FROM data AS d","-- The INTERVAL creates an error in mysql

-- WINDOW FUNCTION Queries
-- Power output changes
SELECT
    d.time,
    power_output as power_output,
    LAG(power_output) OVER (ORDER BY time) as previous_power_output,
    power_output - LAG(power_output) OVER (ORDER BY time) as power_change
FROM data as d",MySQLHandler,1419.3840026855469,1.6124688279301747,557.359375,13.607406616210938,0.0,0.0,0.028177261352539062,6.487595558166504,166536,5.082401275634766,False
"/* Running total */ SELECT time, power_output AS power_output, SUM(power_output) OVER (ORDER BY CASE WHEN time IS NULL THEN 1 ELSE 0 END, time) AS running_total FROM data ORDER BY CASE WHEN time IS NULL THEN 1 ELSE 0 END, time","-- Running total
SELECT
    time,
    power_output as power_output,
    SUM(power_output) OVER (ORDER BY time) as running_total
FROM data
ORDER BY time",MySQLHandler,1151.6051292419434,1.4908728179551123,572.25390625,13.97104263305664,0.0,0.0,0.03143024444580078,7.439201354980469,166536,3.8118324279785156,False
/* SELECT Queries */ /* Basic Select with Limit */ SELECT * FROM data LIMIT 100,"-- SELECT Queries
-- Basic Select with Limit
SELECT * FROM data LIMIT 100",PostgresHandler,119.89021301269531,0.102643391521197,284.71484375,13.902091979980469,0.0,0.0,0.0019235610961914062,0.010088920593261719,100,0.006992340087890625,False
/* Basic Count */ SELECT COUNT(*) FROM data,"-- Basic Count
SELECT COUNT(*) FROM data",PostgresHandler,130.57923316955566,0.10809464508094646,291.1328125,14.215469360351562,0.0,0.0,0.0018291473388671875,0.0023717880249023438,1,0.000133514404296875,False
/* Select with Simple Date Range Filter */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01',"-- Select with Simple Date Range Filter 
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",PostgresHandler,129.32205200195312,0.139182156133829,284.79296875,13.905906677246094,0.0,0.0,0.0074443817138671875,0.692805290222168,8760,0.6016273498535156,False
/* Select with Multiple Filters (Date Range and Category) */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND power_output > 0,"-- Select with Multiple Filters (Date Range and Category)
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND power_output > 0",PostgresHandler,162.19687461853027,0.0997029702970297,292.02734375,14.259147644042969,0.0,0.0,0.004764556884765625,0.35077762603759766,4097,0.2814445495605469,False
/* Select with ORDER BY and Limit */ SELECT * FROM data ORDER BY power_output DESC LIMIT 50,"-- Select with ORDER BY and Limit
SELECT * FROM data ORDER BY power_output DESC LIMIT 50",PostgresHandler,156.1877727508545,0.08982630272952853,298.87109375,14.593315124511719,0.0,0.0,0.0019378662109375,0.006992340087890625,50,0.003559112548828125,False
"/* Get top 50 rows by power output */ /* AGGREGATE Queries */ /* Basic Aggregates */ SELECT AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data","-- Get top 50 rows by power output

-- AGGREGATE Queries 
-- Basic Aggregates
SELECT AVG(power_output) as avg_power_output, MAX(power_output) as max_power_output, MIN(power_output) as min_power_output FROM data",PostgresHandler,160.95805168151855,0.04218362282878412,305.97265625,14.940071105957031,0.0,0.0,0.00199127197265625,0.0024747848510742188,1,0.000148773193359375,False
"/* Aggregates with Date Range Filter (Corrected: use AND, standard date format) */ SELECT AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'","-- Aggregates with Date Range Filter (Corrected: use AND, standard date format)
SELECT AVG(power_output) as avg_power_output, MAX(power_output) as max_power_output, MIN(power_output) as min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",PostgresHandler,133.32605361938477,0.05206982543640898,186.7109375,9.116744995117188,0.0,0.0,0.0020418167114257812,0.0024747848510742188,1,0.000148773193359375,False
"/* Aggregates Grouped by Year with Ordering */ SELECT EXTRACT(YEAR FROM time) AS year, AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' GROUP BY EXTRACT(YEAR FROM time) ORDER BY EXTRACT(YEAR FROM time)","-- Aggregates Grouped by Year with Ordering
SELECT
    EXTRACT(YEAR FROM time) as year,
    AVG(power_output) as avg_power_output,
    MAX(power_output) as max_power_output,
    MIN(power_output) as min_power_output
FROM data
WHERE time >= '2023-01-01' AND time < '2024-01-01'
GROUP BY EXTRACT(YEAR FROM time)
ORDER BY EXTRACT(YEAR FROM time)",PostgresHandler,160.51197052001953,0.05144278606965175,194.63671875,9.503746032714844,0.0,0.0,0.002117156982421875,0.0026302337646484375,1,0.000156402587890625,False
"/* JOIN Queries */ /* Simple Self-Join to Calculate Power Change */ SELECT t1.time, t1.power_output AS power_output, t2.power_output AS previous_power, t1.power_output - t2.power_output AS power_change FROM data AS t1 JOIN data AS t2 ON t1.time = t2.time","-- JOIN Queries
-- Simple Self-Join to Calculate Power Change
SELECT
    t1.time,     
    t1.power_output as power_output,  
    t2.power_output as previous_power, 
    t1.power_output - t2.power_output as power_change
FROM data t1
JOIN data t2 ON t1.time = t2.time",PostgresHandler,1680.2549362182617,0.06616915422885572,350.5,17.1142578125,0.0,0.0,0.06696701049804688,7.9729719161987305,166536,5.082401275634766,False
"/* The INTERVAL creates an error in mysql */ /* WINDOW FUNCTION Queries */ /* Power output changes */ SELECT d.time, power_output AS power_output, LAG(power_output) OVER (ORDER BY time) AS previous_power_output, power_output - LAG(power_output) OVER (ORDER BY time) AS power_change FROM data AS d","-- The INTERVAL creates an error in mysql

-- WINDOW FUNCTION Queries
-- Power output changes
SELECT
    d.time,
    power_output as power_output,
    LAG(power_output) OVER (ORDER BY time) as previous_power_output,
    power_output - LAG(power_output) OVER (ORDER BY time) as power_change
FROM data as d",PostgresHandler,496.9663619995117,0.05744099378881987,362.5390625,17.702102661132812,0.0,0.0,0.07326889038085938,8.91526985168457,166536,5.082401275634766,False
"/* Running total */ SELECT time, power_output AS power_output, SUM(power_output) OVER (ORDER BY time) AS running_total FROM data ORDER BY time","-- Running total
SELECT
    time,
    power_output as power_output,
    SUM(power_output) OVER (ORDER BY time) as running_total
FROM data
ORDER BY time",PostgresHandler,528.7888050079346,0.07274534161490682,282.8046875,13.808822631835938,0.0,0.0,0.0772237777709961,9.390632629394531,166536,3.8118324279785156,False
/* SELECT Queries */ /* Basic Select with Limit */ SELECT * FROM data LIMIT 100,"-- SELECT Queries
-- Basic Select with Limit
SELECT * FROM data LIMIT 100",DuckDBHandler,8.810043334960938,0.011457036114570362,129.0390625,12.601470947265625,0.0,0.0,0.0,0.0,100,0.006992340087890625,False
/* Basic Count */ SELECT COUNT(*) FROM data,"-- Basic Count
SELECT COUNT(*) FROM data",DuckDBHandler,4.12297248840332,0.008944099378881987,128.58203125,12.556838989257812,0.0,0.0,0.0,0.0,1,0.000133514404296875,False
/* Select with Simple Date Range Filter */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01',"-- Select with Simple Date Range Filter 
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",DuckDBHandler,38.15293312072754,0.011386138613861388,128.58203125,12.556838989257812,0.0,0.0,0.0,0.0,8760,0.6016273498535156,False
/* Select with Multiple Filters (Date Range and Category) */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND power_output > 0,"-- Select with Multiple Filters (Date Range and Category)
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND power_output > 0",DuckDBHandler,22.964954376220703,0.014328358208955224,128.58203125,12.556838989257812,0.0,0.0,0.0,0.0,4097,0.2814445495605469,False
/* Select with ORDER BY and Limit */ SELECT * FROM data ORDER BY power_output DESC NULLS FIRST LIMIT 50,"-- Select with ORDER BY and Limit
SELECT * FROM data ORDER BY power_output DESC LIMIT 50",DuckDBHandler,13.277053833007812,0.007821782178217822,91.125,8.89892578125,0.0,0.0,0.0,0.0,50,0.003559112548828125,False
"/* Get top 50 rows by power output */ /* AGGREGATE Queries */ /* Basic Aggregates */ SELECT AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data","-- Get top 50 rows by power output

-- AGGREGATE Queries 
-- Basic Aggregates
SELECT AVG(power_output) as avg_power_output, MAX(power_output) as max_power_output, MIN(power_output) as min_power_output FROM data",DuckDBHandler,7.884025573730469,0.006757763975155279,91.125,8.89892578125,0.0,0.0,0.0,0.0,1,0.000148773193359375,False
"/* Aggregates with Date Range Filter (Corrected: use AND, standard date format) */ SELECT AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'","-- Aggregates with Date Range Filter (Corrected: use AND, standard date format)
SELECT AVG(power_output) as avg_power_output, MAX(power_output) as max_power_output, MIN(power_output) as min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",DuckDBHandler,3.6249160766601562,0.012223602484472051,91.125,8.89892578125,0.0,0.0,0.0,0.0,1,0.000148773193359375,False
"/* Aggregates Grouped by Year with Ordering */ SELECT EXTRACT(YEAR FROM time) AS year, AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' GROUP BY EXTRACT(YEAR FROM time) ORDER BY EXTRACT(YEAR FROM time)","-- Aggregates Grouped by Year with Ordering
SELECT
    EXTRACT(YEAR FROM time) as year,
    AVG(power_output) as avg_power_output,
    MAX(power_output) as max_power_output,
    MIN(power_output) as min_power_output
FROM data
WHERE time >= '2023-01-01' AND time < '2024-01-01'
GROUP BY EXTRACT(YEAR FROM time)
ORDER BY EXTRACT(YEAR FROM time)",DuckDBHandler,5.905866622924805,0.008217821782178218,91.125,8.89892578125,0.0,0.0,0.0,0.0,1,0.000156402587890625,False
"/* JOIN Queries */ /* Simple Self-Join to Calculate Power Change */ SELECT t1.time, t1.power_output AS power_output, t2.power_output AS previous_power, t1.power_output - t2.power_output AS power_change FROM data AS t1 JOIN data AS t2 ON t1.time = t2.time","-- JOIN Queries
-- Simple Self-Join to Calculate Power Change
SELECT
    t1.time,     
    t1.power_output as power_output,  
    t2.power_output as previous_power, 
    t1.power_output - t2.power_output as power_change
FROM data t1
JOIN data t2 ON t1.time = t2.time",DuckDBHandler,211.777925491333,0.002186335403726708,91.125,8.89892578125,0.0,0.0,0.0,0.0,166536,5.082401275634766,False
"/* The INTERVAL creates an error in mysql */ /* WINDOW FUNCTION Queries */ /* Power output changes */ SELECT d.time, power_output AS power_output, LAG(power_output) OVER (ORDER BY time) AS previous_power_output, power_output - LAG(power_output) OVER (ORDER BY time) AS power_change FROM data AS d","-- The INTERVAL creates an error in mysql

-- WINDOW FUNCTION Queries
-- Power output changes
SELECT
    d.time,
    power_output as power_output,
    LAG(power_output) OVER (ORDER BY time) as previous_power_output,
    power_output - LAG(power_output) OVER (ORDER BY time) as power_change
FROM data as d",DuckDBHandler,242.34485626220703,0.009464508094645082,91.125,8.89892578125,0.0,0.0,0.0,0.0,166536,5.082401275634766,False
"/* Running total */ SELECT time, power_output AS power_output, SUM(power_output) OVER (ORDER BY time) AS running_total FROM data ORDER BY time","-- Running total
SELECT
    time,
    power_output as power_output,
    SUM(power_output) OVER (ORDER BY time) as running_total
FROM data
ORDER BY time",DuckDBHandler,224.03812408447266,0.005479452054794521,91.125,8.89892578125,0.0,0.0,0.0,0.0,166536,3.8118324279785156,False
/* SELECT Queries */ /* Basic Select with Limit */ SELECT * FROM data LIMIT 100,"-- SELECT Queries
-- Basic Select with Limit
SELECT * FROM data LIMIT 100",ClickHouseHandler,75.94609260559082,3.967640449438202,680.734375,16.619491577148438,0.0,0.0,0.0022296905517578125,0.00896453857421875,100,0.006992340087890625,False
/* Basic Count */ SELECT COUNT(*) FROM data,"-- Basic Count
SELECT COUNT(*) FROM data",ClickHouseHandler,31.227827072143555,4.376019900497512,730.046875,17.823410034179688,0.0,0.0,0.0025758743286132812,0.004521369934082031,1,0.000133514404296875,False
/* Select with Simple Date Range Filter */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01',"-- Select with Simple Date Range Filter 
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",ClickHouseHandler,191.2679672241211,6.0094,725.36328125,17.709064483642578,0.0,0.0,0.00327301025390625,0.4253578186035156,8760,0.6016273498535156,False
/* Select with Multiple Filters (Date Range and Category) */ SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND power_output > 0,"-- Select with Multiple Filters (Date Range and Category)
SELECT * FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' AND power_output > 0",ClickHouseHandler,117.7980899810791,3.7597011207970112,744.53515625,18.177127838134766,0.0,0.0,0.002742767333984375,0.22524261474609375,4097,0.2814445495605469,False
/* Select with ORDER BY and Limit */ SELECT * FROM data ORDER BY power_output DESC NULLS FIRST LIMIT 50,"-- Select with ORDER BY and Limit
SELECT * FROM data ORDER BY power_output DESC LIMIT 50",ClickHouseHandler,63.31896781921387,5.819173967459324,736.203125,17.973709106445312,0.0,0.0,0.0023698806762695312,0.007431983947753906,50,0.003559112548828125,False
"/* Get top 50 rows by power output */ /* AGGREGATE Queries */ /* Basic Aggregates */ SELECT AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data","-- Get top 50 rows by power output

-- AGGREGATE Queries 
-- Basic Aggregates
SELECT AVG(power_output) as avg_power_output, MAX(power_output) as max_power_output, MIN(power_output) as min_power_output FROM data",ClickHouseHandler,38.68222236633301,4.101945137157107,747.984375,18.261337280273438,0.0,0.0,0.002109527587890625,0.00453948974609375,1,0.000148773193359375,False
"/* Aggregates with Date Range Filter (Corrected: use AND, standard date format) */ SELECT AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'","-- Aggregates with Date Range Filter (Corrected: use AND, standard date format)
SELECT AVG(power_output) as avg_power_output, MAX(power_output) as max_power_output, MIN(power_output) as min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01'",ClickHouseHandler,35.2170467376709,9.905025125628141,745.59375,18.202972412109375,0.0,0.0,0.0027265548706054688,0.004540443420410156,1,0.000148773193359375,False
"/* Aggregates Grouped by Year with Ordering */ SELECT EXTRACT(YEAR FROM time) AS year, AVG(power_output) AS avg_power_output, MAX(power_output) AS max_power_output, MIN(power_output) AS min_power_output FROM data WHERE time >= '2023-01-01' AND time < '2024-01-01' GROUP BY EXTRACT(YEAR FROM time) ORDER BY EXTRACT(YEAR FROM time)","-- Aggregates Grouped by Year with Ordering
SELECT
    EXTRACT(YEAR FROM time) as year,
    AVG(power_output) as avg_power_output,
    MAX(power_output) as max_power_output,
    MIN(power_output) as min_power_output
FROM data
WHERE time >= '2023-01-01' AND time < '2024-01-01'
GROUP BY EXTRACT(YEAR FROM time)
ORDER BY EXTRACT(YEAR FROM time)",ClickHouseHandler,58.40706825256348,4.294332084893883,756.05078125,18.458271026611328,0.0,0.0,0.002613067626953125,0.004618644714355469,1,0.000156402587890625,False
"/* JOIN Queries */ /* Simple Self-Join to Calculate Power Change */ SELECT t1.time, t1.power_output AS power_output, t2.power_output AS previous_power, t1.power_output - t2.power_output AS power_change FROM data AS t1 JOIN data AS t2 ON t1.time = t2.time","-- JOIN Queries
-- Simple Self-Join to Calculate Power Change
SELECT
    t1.time,     
    t1.power_output as power_output,  
    t2.power_output as previous_power, 
    t1.power_output - t2.power_output as power_change
FROM data t1
JOIN data t2 ON t1.time = t2.time",ClickHouseHandler,1229.8078536987305,82.68105131414268,910.07421875,22.218608856201172,0.0,0.0,0.008457183837890625,4.9006242752075195,166536,5.082401275634766,False
"/* The INTERVAL creates an error in mysql */ /* WINDOW FUNCTION Queries */ /* Power output changes */ SELECT d.time, power_output AS power_output, lagInFrame(power_output) OVER (ORDER BY time) AS previous_power_output, power_output - lagInFrame(power_output) OVER (ORDER BY time) AS power_change FROM data AS d","-- The INTERVAL creates an error in mysql

-- WINDOW FUNCTION Queries
-- Power output changes
SELECT
    d.time,
    power_output as power_output,
    LAG(power_output) OVER (ORDER BY time) as previous_power_output,
    power_output - LAG(power_output) OVER (ORDER BY time) as power_change
FROM data as d",ClickHouseHandler,61.99812889099121,6.2551,836.1171875,20.41301727294922,0.0,0.0,0.002765655517578125,0.00455474853515625,0,0.0,True
"/* Running total */ SELECT time, power_output AS power_output, SUM(power_output) OVER (ORDER BY time) AS running_total FROM data ORDER BY time","-- Running total
SELECT
    time,
    power_output as power_output,
    SUM(power_output) OVER (ORDER BY time) as running_total
FROM data
ORDER BY time",ClickHouseHandler,1141.2158012390137,4.540024844720497,871.28125,21.271514892578125,0.0,0.0,0.008599281311035156,6.78510856628418,166536,3.8118324279785156,False
